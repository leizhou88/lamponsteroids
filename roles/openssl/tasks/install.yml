# Install required software for compiling OpenSSL from source
#
- name: Install required tools for compiling OpenSSL
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - libtool # Dependencies: autoconf automake cpp gcc libmpc m4 mpfr libgcc libgomp
    - perl-core # Dependencies: gdbm-devel glibc-devel glibc-headers kernel-headers libdb-devel perl perl-Archive-Extract perl-Archive-Tar perl-B-Lint perl-CGI perl-CPAN perl-CPAN-Meta perl-CPAN-Meta-Requirements perl-CPAN-Meta-YAML perl-CPANPLUS perl-CPANPLUS-Dist-Build perl-Carp perl-Compress-Raw-Bzip2 perl-Compress-Raw-Zlib perl-DBD-SQLite perl-DBI perl-DBIx-Simple perl-DB_File perl-Data-Dumper perl-Digest perl-Digest-MD5 perl-Digest-SHA perl-Encode perl-Env perl-Exporter perl-ExtUtils-CBuilder perl-ExtUtils-Embed perl-ExtUtils-Install perl-ExtUtils-MakeMaker perl-ExtUtils-Manifest perl-ExtUtils-ParseXS perl-FCGI perl-File-CheckTree perl-File-Fetch perl-File-Path perl-File-Temp perl-Filter perl-Getopt-Long perl-HTTP-Tiny perl-IO-Compress perl-IO-Zlib perl-IPC-Cmd perl-JSON-PP perl-Locale-Codes perl-Locale-Maketext perl-Locale-Maketext-Simple perl-Log-Message perl-Log-Message-Simple perl-Module-Build perl-Module-CoreList perl-Module-Load perl-Module-Load-Conditional perl-Module-Loaded perl-Module-Metadata perl-Module-Pluggable perl-Net-Daemon perl-Object-Accessor perl-Package-Constants perl-Params-Check perl-Parse-CPAN-Meta perl-PathTools perl-Perl-OSType perl-PlRPC perl-Pod-Checker perl-Pod-Escapes perl-Pod-LaTeX perl-Pod-Parser perl-Pod-Perldoc perl-Pod-Simple perl-Pod-Usage perl-Scalar-List-Utils perl-Socket perl-Storable perl-Sys-Syslog perl-Term-UI perl-Test-Harness perl-Test-Simple perl-Text-ParseWords perl-Text-Soundex perl-Text-Unidecode perl-Thread-Queue perl-Time-HiRes perl-Time-Local perl-Time-Piece perl-Version-Requirements perl-autodie perl-constant perl-devel perl-libs perl-local-lib perl-macros perl-parent perl-podlators perl-threads perl-threads-shared perl-version pyparsing systemtap-sdt-devel glibc glibc-common
    - zlib-devel # Dependencies: zlib
  tags: [openssl, install]



# Download sources for building OpenSSL
# It's the best to download them from GitHub releases:
# https://github.com/openssl/openssl/releases
#
- name: Download required source files
  get_url:
    dest: "{{ openssl_sources_location }}"
    url: "https://github.com/openssl/openssl/archive/OpenSSL_{{ openssl_version | replace( '.', '_' ) }}.tar.gz"
  tags: [openssl, install]



# Unpack downloaded OpenSSL sources
#
- name: Unpack downloaded OpenSSL sources
  unarchive:
    src: "{{ openssl_sources_location }}/openssl-OpenSSL_{{ openssl_version | replace( '.', '_' ) }}.tar.gz"
    dest: "{{ openssl_sources_location }}"
    owner: "{{ openssl_build_user }}"
    group: "{{ openssl_build_group }}"
    copy: no
    creates: "{{ openssl_sources_location }}/openssl-OpenSSL_{{ openssl_version | replace( '.', '_' ) }}"
  tags: [openssl, install]



# Compile OpenSSL
# It will be compiled by using different user than root.
#
- name: Compile OpenSSL
  command: "{{ item }}"
  args:
    chdir: "{{ openssl_sources_location }}/openssl-OpenSSL_{{ openssl_version | replace( '.', '_' ) }}"
  with_items:
    - "./config --prefix={{ openssl_install_path }} --openssldir={{ openssl_install_path }} shared zlib"
    - make
    - make test
  become: true
  become_user: "{{ openssl_build_user }}"
  tags: [openssl, install]



# Install compiled OpenSSL
# This operation must be executed as sudo user
#
- name: Install compiled OpenSSL
  command: make install
  args:
    chdir: "{{ openssl_sources_location }}/openssl-OpenSSL_{{ openssl_version | replace( '.', '_' ) }}"
  tags: [openssl, install]



# Remove downloaded sources after installation
#
- name: Cleanup downloaded sources
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ openssl_sources_location }}/openssl-OpenSSL_{{ openssl_version | replace( '.', '_' ) }}.tar.gz"
    - "{{ openssl_sources_location }}/openssl-OpenSSL_{{ openssl_version | replace( '.', '_' ) }}"
  when: "openssl_cleanup_after_install == true"
  tags: [openssl, install]



# Link libraries
#
- name: Link libraries
  template:
    src: openssl.conf.j2
    dest: "/etc/ld.so.conf.d/openssl-{{ openssl_version }}.conf"
    owner: root
    group: root
    mode: 0644
  notify: reload ldconfig
  tags: [openssl, install]



# Add new OpenSSL executables to PATH
# It will fix the issue when OpenSSL compiled from source can be overridden by OpenSSL installed with yum
#
- name: Add OpenSSL executables to PATH
  template:
    src: openssl.sh.j2
    dest: /etc/profile.d/openssl.sh
    owner: root
    group: root
    mode: 0644
  tags: [openssl, install]
